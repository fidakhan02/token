// ==========================================
// JWT Authentication for Secure Banking API Endpoints
// ==========================================

const express = require('express');
const jwt = require('jsonwebtoken');

const app = express();
app.use(express.json());

// Secret key for signing JWT
const SECRET_KEY = 'mybanksecret';

// Hardcoded user credentials
const USER = {
  username: 'user1',
  password: 'password123',
};

// Simulated bank account
let account = {
  balance: 1000,
};

// ------------------------------------
// Login Route - Generate JWT Token
// ------------------------------------
app.post('/login', (req, res) => {
  const { username, password } = req.body;

  // Basic authentication check
  if (username === USER.username && password === USER.password) {
    // Generate JWT token valid for 1 hour
    const token = jwt.sign({ username }, SECRET_KEY, { expiresIn: '1h' });
    res.json({
      message: 'Login successful ✅',
      token: token,
    });
  } else {
    res.status(401).json({ error: 'Invalid username or password ❌' });
  }
});

// ------------------------------------
// Middleware for JWT Verification
// ------------------------------------
const verifyToken = (req, res, next) => {
  const authHeader = req.headers['authorization'];

  if (!authHeader) {
    return res.status(401).json({ error: 'Authorization header missing' });
  }

  const token = authHeader.split(' ')[1];

  jwt.verify(token, SECRET_KEY, (err, user) => {
    if (err) {
      return res.status(403).json({ error: 'Invalid or expired token' });
    }
    req.user = user;
    next();
  });
};

// ------------------------------------
// Protected Routes
// ------------------------------------

// Check Account Balance
app.get('/balance', verifyToken, (req, res) => {
  res.json({
    username: req.user.username,
    balance: account.balance,
  });
});

// Deposit Money
app.post('/deposit', verifyToken, (req, res) => {
  const { amount } = req.body;

  if (!amount || amount <= 0) {
    return res.status(400).json({ error: 'Invalid deposit amount' });
  }

  account.balance += amount;
  res.json({
    message: `Deposited ₹${amount} successfully.`,
    newBalance: account.balance,
  });
});

// Withdraw Money
app.post('/withdraw', verifyToken, (req, res) => {
  const { amount } = req.body;

  if (!amount || amount <= 0) {
    return res.status(400).json({ error: 'Invalid withdrawal amount' });
  }

  if (amount > account.balance) {
    return res.status(400).json({ error: 'Insufficient balance ❌' });
  }

  account.balance -= amount;
  res.json({
    message: `Withdrew ₹${amount} successfully.`,
    newBalance: account.balance,
  });
});

// ------------------------------------
// Start Server
// ------------------------------------
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`✅ Banking API running on http://localhost:${PORT}`);
});
